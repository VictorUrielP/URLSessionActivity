# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

#Swiftlint reports
swiftlint_result_apps.html
swiftlint_result_frameworks.html

## Auto generated Swiftlint files
## .swiftlint.yml
API/**/*.yml
Apps/**/*.yml
Common/**/*.yml
Core/**/*.yml
Domain/**/*.yml
Features/**/*.yml

## Build generated
build/
DerivedData

## Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata

## Other
*.xccheckout
*.moved-aside
*.xcuserstate
*.xcscmblueprint

## Obj-C/Swift specific
*.hmap
*.ipa
*.app

## OSX
.DS_Store
.AppleDouble
.LSOverride
appium/.idea/
appium/target/

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Automatic backup files
*~.nib/
*.swp
*~
*.dat
*.dep

# Exclusions
!default.pbxuser
!default.mode1v3
!default.mode2v3
!default.perspectivev3
!xcshareddata

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
Package.resolved
.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#

# Important: This particular binary is omitted because we are not using that binary and because it exceeds Github size limit (100 Mb).
Pods/Realm/core/realm-monorepo.xcframework/watchos-arm64_i386_x86_64-simulator/

!Podfile
!Podfile.lock
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
Carthage/Checkouts

Carthage/Build

# Swift Package Manager
Package.resolved

# Bundler
 Gemfile.lock

# fastlane specific
**/fastlane/report.xml

# deliver temporary files
**/fastlane/Preview.html

# snapshot generated screenshots
**/fastlane/screenshots

# scan temporary files
**/fastlane/test_output

# Gyb 
*.gyb
/Apps/SAMS/SAMS/SamsConfig.swift
/Apps/SAMS/Scripts/

#Artifacts
#xcframeworks generated automatically
BuildSupport/artifacts/
frameworkStatus.properties
BuildSupport/artifacts/glass-apollo/
BuildSupport/artifacts/apollo-xcframeworks/

#skip python cache
BuildSupport/lib/__pycache__/
BuildSupport/__pycache__/

#generated properties
releasesBranches.properties

# Apollo
API/InstaleapServices/scripts/apollo.*
API/InstaleapServices/scripts/apollo/

Features/GRCheckout/scripts/apollo.*
Features/GRCheckout/scripts/apollo/
